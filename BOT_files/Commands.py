from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import types, Dispatcher
from database import SQLite_db
from MARKUP import MarkUp


async def start(message: types.Message):
    await message.answer(f"üñê–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.chat.first_name}</b>!\n"
                         f" <b>Market Vape Bot</b> - –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –Ω–∏–∫–æ—Ç–∏–Ω–æ—Å–æ–¥–µ—Ä–∂–∞—â–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n"
                        "üó£–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <b>/menu</b>",
                        reply_markup=MarkUp.start_keyboard)


async def help(message: types.Message):
    await message.answer("–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –≤–≤–µ–¥–∏—Ç–µ:\n"
                         "    <b>/menu</b>",
                        reply_markup=MarkUp.start_keyboard)


async def menu(message: types.Message):
    await message.answer("ü§ñ –° –ø–æ–º–æ—â—å—é <b>Market Vape Bot</b> –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                        " üõí<u>–û—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –∑–∞–∫–∞–∑</u>\n   –ö–æ–º–∞–Ω–¥–∞: <b>/order</b>\n"
                        " üëÄ<u>–£–∑–Ω–∞—Ç—å –æ–± –∞–∫—Ç—É–∞–ª—å–Ω–æ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ</u>\n   –ö–æ–º–∞–Ω–¥–∞: <b>/assortment</b>\n"
                        " üè™<u>–£–∑–Ω–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤</u>\n   –ö–æ–º–∞–Ω–¥–∞: <b>/adress</b>\n"
                        " üìû<u>–°–≤—è–∑—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π</u>\n   –ö–æ–º–∞–Ω–¥–∞: <b>/phone</b>",
                        reply_markup=MarkUp.menu_keyboard)


async def order(message: types.Message):
    if not SQLite_db.user_reg(message.from_user.id):
        await message.reply("ü§ù–î–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                                                    "–ö–æ–º–∞–Ω–¥–∞: <b>/registration</b>",
                                                    reply_markup=MarkUp.reg_keyboard)
    else:
        await message.reply(f"<b>{message.chat.first_name}</b>, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –æ–∑–Ω–∞–∫–æ–º—Ç–µ—Å—å —Å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º.\n"
                            "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: <b>/assortment</b>\n"
                            "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑: <b>/make_order</b>",
                            reply_markup=MarkUp.make_o_keyboard)


async def assortment(message: types.Message):
    await message.reply("‚úç–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–∞–≥–∞–∑–∏–Ω–∞:\n"
                            "<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–∞–≥–∞–∑–∏–Ω–∞</b>\n"
                        "–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é: <b>/menu</b>\n"
                        "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑: <b>/make_order</b>",
                        reply_markup=MarkUp.m_keyboard)


async def adress_c(message: types.Message):
    await message.reply("üè™–ê–¥—Ä–µ—Å–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n"
                            "<b>–ê–î–†–ï–°</b>\n"
                        "–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é: <b>/menu</b>",
                        reply_markup=MarkUp.start_keyboard)


async def phone(message: types.Message):
    await message.reply("üìû–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:\n"
                            "<b>+7XXXXXXXXXX</b>\n"
                        "–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é: <b>/menu</b>",
                        reply_markup=MarkUp.start_keyboard)


def add_commands(dispatcher: Dispatcher):
    dispatcher.register_message_handler(assortment, commands="assortment")
    dispatcher.register_message_handler(help, commands="help")
    dispatcher.register_message_handler(adress_c, commands="adress")
    dispatcher.register_message_handler(phone, commands="phone")
    dispatcher.register_message_handler(start, commands="start")
    dispatcher.register_message_handler(menu, commands="menu")
    dispatcher.register_message_handler(order, commands="order")

